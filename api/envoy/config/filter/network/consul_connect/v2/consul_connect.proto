syntax = "proto3";

package envoy.config.filter.network.client_certificate_restriction.v2;

import "google/protobuf/duration.proto";

import "validate/validate.proto";
import "gogoproto/gogo.proto";

// [#protodoc-title: Client certificate restriction]
// Client certificate restriction

// ClientCertificateRestriction contains the configuration necessary to
// perform Client Certificate-based authorization via a REST API
// such as Consul Connect
message ClientCertificateRestriction {
  // The name of the service who owns this proxy
  // Target must be delivered by the filter as part of the authorize request payload
  string target = 1 [(validate.rules).string.min_bytes = 1];

  // the hostname of the authorization REST service
  string authorize_hostname = 2 [(validate.rules).string.min_bytes = 1];
  // the name of the Envoy Cluster representing the authorization REST service
  string authorize_cluster_name = 3 [(validate.rules).string.min_bytes = 1];
  // Connection Timeout tells the filter to set a timeout for unresponsive connections created to this upstream.
  // If not provided by the user, it will set to a default value
  google.protobuf.Duration request_timeout = 4 [(gogoproto.stdduration) = true];
}
